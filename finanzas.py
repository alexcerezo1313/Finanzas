import streamlit as st

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Organizador del Hogar - Finanzas", layout="centered")
st.title("üè† Organizador Financiero del Hogar")
st.write("Introduce los gastos fijos de tu hogar para calcular recomendaciones de presupuesto de ocio, comida, gasolina y fondo de emergencias.")

# Funci√≥n principal
def main():
    with st.form("datos_hogar"):
        st.header("Datos del Hogar")
        ingreso = st.number_input("Ingresos totales del hogar (‚Ç¨):", min_value=0.0, step=50.0, format="%.2f")
        num_personas = st.number_input("N√∫mero de personas en el hogar:", min_value=1, step=1)
        num_vehiculos = st.number_input("N√∫mero de veh√≠culos:", min_value=0, step=1)

        # Tipos de veh√≠culos din√°micos
        tipos_vehiculos = []
        if num_vehiculos > 0:
            st.subheader("Tipo de veh√≠culo por unidad")
            opciones = ["Coche peque√±o", "Coche medio", "SUV/4x4"]
            for i in range(num_vehiculos):
                tipo = st.selectbox(
                    f"Tipo de veh√≠culo {i+1}",
                    opciones,
                    key=f"tipo_vehiculo_{i}"
                )
                tipos_vehiculos.append(tipo)

        st.subheader("Gastos fijos mensuales (‚Ç¨)")
        hipoteca = st.number_input("Hipoteca / Alquiler:", min_value=0.0, step=10.0, format="%.2f")
        agua = st.number_input("Agua:", min_value=0.0, step=5.0, format="%.2f")
        luz = st.number_input("Luz:", min_value=0.0, step=5.0, format="%.2f")
        gas = st.number_input("Gas (natural/calefacci√≥n):", min_value=0.0, step=5.0, format="%.2f")
        internet_movil = st.number_input("Internet y m√≥vil:", min_value=0.0, step=5.0, format="%.2f")
        deudas = st.number_input("Deudas pendientes:", min_value=0.0, step=10.0, format="%.2f")
        seguros = st.number_input("Seguros contratados:", min_value=0.0, step=10.0, format="%.2f")
        otros_fijos = st.number_input("Otros gastos fijos:", min_value=0.0, step=10.0, format="%.2f")

        submitted = st.form_submit_button("Calcular")

    if submitted:
        # C√°lculo de totales
        total_fijos = hipoteca + agua + luz + gas + internet_movil + deudas + seguros + otros_fijos
        sobrante = ingreso - total_fijos

        # Recomendaciones profesionales
        comida = round(num_personas * 120, 2)
        # Map de precio mensual por tipo de veh√≠culo
        gas_price_map = {
            "Coche peque√±o": 80,
            "Coche medio": 120,
            "SUV/4x4": 160
        }
        gasolina = round(sum(gas_price_map.get(t, 0) for t in tipos_vehiculos), 2)
        fondo_emergencias = round(sobrante * 0.10, 2)
        ocio = round(sobrante * 0.10, 2)

        # Saldo restante despu√©s de asignaciones
        asignado = comida + gasolina + fondo_emergencias + ocio
        saldo_restante = round(sobrante - asignado, 2)

        # Presentaci√≥n de resultados
        st.header("üìã Resultados y Recomendaciones")
        st.write(f"**Ingresos totales:** ‚Ç¨{ingreso:.2f}")
        st.write(f"**Gastos fijos totales:** ‚Ç¨{total_fijos:.2f}")
        st.write(f"**Sobrante despu√©s de gastos fijos:** ‚Ç¨{sobrante:.2f}")
        st.markdown("---")

        # M√©tricas detalladas
        col1, col2, col3 = st.columns(3)
        with col1:
            st.subheader("üçΩÔ∏è Comida")
            st.metric(label="Budget (‚Ç¨)", value=f"‚Ç¨{comida}")
        with col2:
            st.subheader("‚õΩ Gasolina")
            st.metric(label="Budget (‚Ç¨)", value=f"‚Ç¨{gasolina}")
        with col3:
            st.subheader("üéâ Ocio")
            st.metric(label="Budget (‚Ç¨)", value=f"‚Ç¨{ocio}")

        col4, col5 = st.columns(2)
        with col4:
            st.subheader("üõ†Ô∏è Fondo Emergencias")
            st.metric(label="Budget (‚Ç¨)", value=f"‚Ç¨{fondo_emergencias}")
        with col5:
            st.subheader("üíº Saldo Restante")
            if saldo_restante < 0:
                st.error(f"D√©ficit de ‚Ç¨{abs(saldo_restante):.2f} - ajusta tus gastos.")
            else:
                st.metric(label="Saldo (‚Ç¨)", value=f"‚Ç¨{saldo_restante}")

        # Consejos finales
        st.markdown("---")
        st.subheader("Consejos Profesionales üîç")
        st.write(
            "- Revisa tus gastos fijos peri√≥dicamente.\n"
            "- Ajusta las recomendaciones seg√∫n tu estilo de vida.\n"
            "- Reserva un porcentaje extra si prev√©s imprevistos."
        )

if __name__ == "__main__":
    main()
     